# preprocessing
img <- image_read("fig/table.jpg") %>%
image_transparent("white", fuzz=82) %>%
image_background("white") %>%
image_negate() %>%
image_morphology(method = "Thinning", kernel = "Rectangle:20x1+0+0^<") %>%
image_negate() %>%
image_crop(geometry_area(0, 0, 80, 25))
img
https://pbs.twimg.com/media/Dv3pIsIUwAEdu--.jpg:large
library(tidyverse)
library(webshot2)
webshot(url = "https://pbs.twimg.com/media/Dv3pIsIUwAEdu--.jpg:large",
file = "fig/table-in-image.png")
library(magick)
table_img <- image_read("fig/table-in-image.png")
table_img
library(tesseract)
table_text <- tesseract::ocr_data("fig/table-in-image.png", engine = "eng")
table_text
table_img_processed <- table_img %>%
image_transparent("white", fuzz=82) %>%
image_background("white") %>%
image_negate() %>%
image_morphology(method = "Thinning", kernel = "Rectangle:20x1+0+0^<") %>%
image_negate() %>%
image_crop(geometry_area(0, 0, 80, 25))
table_img_processed
# preprocessing
img <- table_img %>%
image_transparent("white", fuzz=82) %>%
image_background("white") %>%
image_negate() %>%
image_morphology(method = "Thinning", kernel = "Rectangle:20x1+0+0^<") %>%
image_negate() %>%
image_crop(geometry_area(0, 0, 80, 25))
img
url <- "https://pbs.twimg.com/media/Dv3pIsIUwAEdu--.jpg:large"
download.file(url, destfile = "fig/table.jpg")
# preprocessing
img <- image_read("fig/table.jpg") %>%
image_transparent("white", fuzz=82) %>%
image_background("white") %>%
image_negate() %>%
image_morphology(method = "Thinning", kernel = "Rectangle:20x1+0+0^<") %>%
image_negate() %>%
image_crop(geometry_area(0, 0, 80, 25))
img
table_img_processed <- image_read("fig/table.jpg") %>%
image_transparent("white", fuzz=82) %>%
image_background("white") %>%
image_negate() %>%
image_morphology(method = "Thinning", kernel = "Rectangle:20x1+0+0^<") %>%
image_negate() %>%
image_crop(geometry_area(0, 0, 80, 25))
table_img_processed
table_img_processed %>%
image_ocr() %>%
stringi::stri_split(fixed = "\n")
table_img
library(magick)
table_img <- image_read("fig/table.jpg")
table_img
library(tesseract)
table_text <- tesseract::ocr_data("fig/table-in-image.png", engine = "eng")
table_text
table_img_processed <- table_img %>%
image_transparent("white", fuzz=82) %>%
image_background("white") %>%
image_negate() %>%
image_morphology(method = "Thinning", kernel = "Rectangle:20x1+0+0^<") %>%
image_negate() %>%
image_crop(geometry_area(0, 0, 80, 25))
table_img_processed
table_text <- table_img_processed %>%
image_ocr() %>%
stringi::stri_split(fixed = "\n")
table_text
table_text %>%
stringi::stri_split(fixed = "\n")
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "‘"))
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "'")) %>%
.[[1]]
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "'")) %>%
.[[1]] %>%
purrr::map_df(~ tibble::tibble(Date = .[1], Price = .[2], Change = .[3])) %>%
dplyr::glimpse()
table_text
table_text %>%
.[[1]] %>%
stringi::stri_split(fixed = "\n")
table_text %>%
.[[1]] %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "|\\)\\]"))
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "|\\)\\]"))
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "|\\)\\]")) %>%
.[[1]]
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "|)]")) %>%
.[[1]]
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "|\)\]"))
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "|\\)\\]"))
View(table_text)
table_text[[1]]
whitelist <- glue::glue("1234567890|,\\.")
table_text <- tesseract::ocr(table_img_processed, engine = tesseract(language = "eng",
options = list(tessedit_char_whitelist = whitelist)))
table_text
table_text %>%
stringi::stri_split(fixed = "\n")
table_text %>%
stringi::stri_split(fixed = "\n") %>%
.[[1]]
table_text %>%
stringi::stri_split(fixed = "\n") %>%
.[[1]] %>%
str_split(pattern = "|")
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "|")) %>%
.[[1]]
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "|")) %>%
.[[1]] %>%
purrr::map_df(~ tibble::tibble(Date = .[1], Price = .[2], Change = .[3], Cor30 = .[4])) %>%
dplyr::glimpse()
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "|")) %>%
.[[1]] %>%
purrr::map_df(~ tibble::tibble(Date = .[1], Price = .[2], Change = .[3], Corr30 = .[4], HV30 = .[5])) %>%
dplyr::glimpse()
whitelist <- glue::glue("1234567890-|,\\.")
table_text <- tesseract::ocr(table_img_processed, engine = tesseract(language = "eng",
options = list(tessedit_char_whitelist = whitelist)))
table_text
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "|")) %>%
.[[1]] %>%
purrr::map_df(~ tibble::tibble(Date = .[1], Price = .[2], Change = .[3], Corr30 = .[4], HV30 = .[5])) %>%
dplyr::glimpse()
whitelist <- glue::glue("1234567890-|/,\\.")
table_text <- tesseract::ocr(table_img_processed, engine = tesseract(language = "eng",
options = list(tessedit_char_whitelist = whitelist)))
table_text
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "|")) %>%
.[[1]] %>%
purrr::map_df(~ tibble::tibble(Date = .[1], Price = .[2], Change = .[3], Corr30 = .[4], HV30 = .[5])) %>%
dplyr::glimpse()
table_text %>% head(30)
table_text %>% head(20)
table_text %>%
stringi::stri_split(fixed = "\n") %>%
purrr::map(~ stringi::stri_split(str = ., fixed = "|")) %>%
.[[1]] %>%
purrr::map_df(~ tibble::tibble(Date = .[1], Price = .[2], Change = .[3], Corr30 = .[4], HV30 = .[5])) %>%
DT::datatable()
devtools::install_github("ropensci/charlatan")
ch_job(locale = "en_US", n = 3)
# devtools::install_github("ropensci/charlatan")
library(charlatan)
ch_job(locale = "en_US", n = 3)
ch_job(locale = "ko_KR", n = 3)
ch_job(locale = "zh_TW", n = 3)
ch_generate('job', 'phone_number', n = 30)
ch_generate('job', 'phone_number', n = 30, locale = "zh_TW")
ch_generate('job', 'phone_number', n = 30, locale = "ko_KR")
ch_generate('phone_number', n = 30, locale = "ko_KR")
ch_generate('phone_number', n = 30, locale = "ko_KR")
tibble(long = ch_lon(n=10), lat = ch_lat(n=10))
library(tidyverse)
library(leaflet)
tibble(long = ch_lon(n=10), lat = ch_lat(n=10))
longlat_df <- tibble(long = ch_lon(n=10), lat = ch_lat(n=10))
locations_df <- tibble(long = ch_lon(n=10), lat = ch_lat(n=10))
locations_df <- tibble(lon = ch_lon(n=10), lat = ch_lat(n=10))
leaflet(locations) %>% addProviderTiles("Stamen.Watercolor")  %>%
addMarkers(~lon, ~lat)
locations_df %>%
leaflet() %>%
addProviderTiles("Stamen.Watercolor") %>%
addMarkers(~lon, ~lat)
? ch_lon
library(tidyverse)
library(leaflet)
korea_bbox <- c(-120, 30, -110, 60)
locations_df <- tibble(lon = ch_lon(n=10, bbox = korea_bbox, lat = ch_lat(n=10, bbox = korea_bbox))
? ch_lon
locations_df %>%
leaflet() %>%
addProviderTiles("Stamen.Watercolor") %>%
addMarkers(~lon, ~lat)
library(tidyverse)
library(leaflet)
korea_bbox <- c(-120, 30, -110, 60)
locations_df <- tibble(lon = ch_lon(n=10, bbox = korea_bbox), lat = ch_lat(n=10, bbox = korea_bbox))
? ch_lon
locations_df %>%
leaflet() %>%
addProviderTiles("Stamen.Watercolor") %>%
addMarkers(~lon, ~lat)
library(tidyverse)
library(leaflet)
korea_bbox <- c(36, 127, 38, 129)
locations_df <- tibble(lon = ch_lon(n=10, bbox = korea_bbox), lat = ch_lat(n=10, bbox = korea_bbox))
locations_df %>%
leaflet() %>%
addProviderTiles("Stamen.Watercolor") %>%
addMarkers(~lon, ~lat)
ch_lat(n=10, bbox = korea_bbox)
ch_lon(n=10, bbox = korea_bbox)
korea_bbox <- c(36, 127, 38, 129 )
ch_lon(n=10, bbox = korea_bbox)
ch_position(bbox = c(-120, 30, -110, 60))
map(1:10, ch_position(bbox = c(-120, 30, -110, 60)))
map(1, ch_position(bbox = c(-120, 30, -110, 60)))
ch_position(bbox = c(-120, 30, -110, 60))
cat(ch_position(bbox = c(36, 127, 38, 129 )), "\n")
for(i in 1:10) {
cat(ch_position(bbox = c(36, 127, 38, 129 )), "\n")
}
print(ch_position(bbox = c(36, 127, 38, 129 )), "\n")
for(i in 1:10) {
print(ch_position(bbox = c(36, 127, 38, 129 )), "\n")
}
for(i in 1:10) {
print(ch_position(bbox = c(36, 127, 38, 129 )))
}
for(i in 1:10) {
ch_position(bbox = c(36, 127, 38, 129 ))
}
test <- list()
test <- list()
for(i in 1:10) {
test[[i]] <- ch_position(bbox = c(36, 127, 38, 129 ))
}
ch_position(bbox = c(36, 127, 38, 129 ))
test <- list()
for(i in 1:10) {
test[[i]] <- ch_position(bbox = c(36, 38, 127, 129 ))
}
ch_position(bbox = c(36, 38, 127, 129 )
ch_position(bbox = c(36, 38, 127, 129 ))
ch_position(10, bbox = c(-120, 30, -110, 60))
ch_position(10, bbox = c(-120, 30, -110, 60)) %>%
enframe
ch_position(10, bbox = c(-120, 30, -110, 60)) %>%
rbind()
map(ch_position(10, bbox = c(-120, 30, -110, 60)), rbind)
map_df(ch_position(10, bbox = c(-120, 30, -110, 60)), rbind)
map_df(ch_position(10, bbox = c(-120, 30, -110, 60)), enframe)
rbind
map_df(ch_position(10, bbox = c(-120, 30, -110, 60)), rbind)
map(ch_position(10, bbox = c(-120, 30, -110, 60)), rbind)
map(ch_position(10, bbox = c(-120, 30, -110, 60)), rbind) %>%
enframe
map(ch_position(10, bbox = c(-120, 30, -110, 60)), rbind) %>%
as_tibble()
map(ch_position(10, bbox = c(-120, 30, -110, 60)), rbind)
do.call(ch_position(10, bbox = c(-120, 30, -110, 60)), rbind)
do.call(rbind, ch_position(10, bbox = c(-120, 30, -110, 60)))
do.call(rbind, ch_position(10, bbox = c(-120, 30, -110, 60))) %>%
set_names(c("lon", "lat"))
do.call(rbind, ch_position(10, bbox = c(-120, 30, -110, 60))) %>%
as_tibble() %>%
set_names(c("lon", "lat"))
locations_df <- do.call(rbind, ch_position(10, bbox = c(-120, 30, -110, 60))) %>%
as_tibble() %>%
set_names(c("lon", "lat"))
locations_df <- tibble(lon = ch_lon(n=10), lat = ch_lat(n=10))
locations_df %>%
leaflet() %>%
addProviderTiles("Stamen.Watercolor") %>%
addMarkers(~lon, ~lat)
library(tidyverse)
library(leaflet)
locations_df <- do.call(rbind, ch_position(10, bbox = c(-120, 30, -110, 60))) %>%
as_tibble() %>%
set_names(c("lon", "lat"))
# locations_df <- tibble(lon = ch_lon(n=10), lat = ch_lat(n=10))
locations_df %>%
leaflet() %>%
addProviderTiles("Stamen.Watercolor") %>%
addMarkers(~lon, ~lat)
library(tidyverse)
library(leaflet)
locations_df <- do.call(rbind, ch_position(10, bbox = c(128, 30, 130, 60))) %>%
as_tibble() %>%
set_names(c("lon", "lat"))
# locations_df <- tibble(lon = ch_lon(n=10), lat = ch_lat(n=10))
locations_df %>%
leaflet() %>%
addProviderTiles("Stamen.Watercolor") %>%
addMarkers(~lon, ~lat)
library(tidyverse)
library(leaflet)
locations_df <- do.call(rbind, ch_position(10, bbox = c(128, 36, 130, 38))) %>%
as_tibble() %>%
set_names(c("lon", "lat"))
# locations_df <- tibble(lon = ch_lon(n=10), lat = ch_lat(n=10))
locations_df %>%
leaflet() %>%
addProviderTiles("Stamen.Watercolor") %>%
addMarkers(~lon, ~lat)
library(tidyverse)
library(leaflet)
locations_df <- do.call(rbind, ch_position(10, bbox = c(124, 33, 132, 43))) %>%
as_tibble() %>%
set_names(c("lon", "lat"))
# locations_df <- tibble(lon = ch_lon(n=10), lat = ch_lat(n=10))
locations_df %>%
leaflet() %>%
addProviderTiles("Stamen.Watercolor") %>%
addMarkers(~lon, ~lat)
library(tidyverse)
library(leaflet)
locations_df <- do.call(rbind, ch_position(10, bbox = c(124, 33, 132, 40))) %>%
as_tibble() %>%
set_names(c("lon", "lat"))
# locations_df <- tibble(lon = ch_lon(n=10), lat = ch_lat(n=10))
locations_df %>%
leaflet() %>%
addProviderTiles("Stamen.Watercolor") %>%
addMarkers(~lon, ~lat)
library(tidyverse)
library(leaflet)
locations_df <- do.call(rbind, ch_position(10, bbox = c(124, 33, 132, 43))) %>%
as_tibble() %>%
set_names(c("lon", "lat"))
# locations_df <- tibble(lon = ch_lon(n=10), lat = ch_lat(n=10))
locations_df %>%
leaflet() %>%
addProviderTiles("Stamen.Watercolor") %>%
addMarkers(~lon, ~lat)
install.packages("fabricatr")
# install.packages("fabricatr")
library(fabricatr)
house_members <- fabricate(
party_id = add_level(
N = 2, party_names = c("민주당", "국민의 힘"), party_ideology = c(0.5, -0.5),
in_power = c(1, 0), party_incumbents = c(241, 194)
),
rep_id = add_level(
N = party_incumbents, member_ideology = rnorm(N, party_ideology, sd = 0.5),
terms_served = draw_count(N = N, mean = 4),
female = draw_binary(N = N, prob = 0.198)
)
)
house_members
# install.packages("fabricatr")
library(fabricatr)
house_members <- fabricate(
party_id = add_level(
N = 2, party_names = c("민주당", "국민의 힘"), party_ideology = c(0.5, -0.5),
in_power = c(1, 0), party_incumbents = c(180, 103)
),
rep_id = add_level(
N = party_incumbents, member_ideology = rnorm(N, party_ideology, sd = 0.5),
terms_served = draw_count(N = N, mean = 4),
female = draw_binary(N = N, prob = 0.198)
)
)
house_members
house_members <- fabricate(
party_id = add_level(
N = 2, party_names = c("민주당", "국민의 힘"), party_ideology = c(0.5, -0.5),
in_power = c(1, 0), party_incumbents = c(180, 103)
),
rep_id = add_level(
N = party_incumbents, member_ideology = rnorm(N, party_ideology, sd = 0.5),
terms_served = draw_count(N = N, mean = 4),
female = draw_binary(N = N, prob = 0.198)
)
) %>% as_tibble()
house_members
state_names <- rownames(USArrests)
df <- tibble(state_names)
df
rownames(data) <- NULL
sim_data <- simulate_dataset(data)
install.packages("fakeR")
library(fakeR)
state_names <- rownames(USArrests)
df <- tibble(state_names)
data <- USArrests
rownames(data) <- NULL
sim_data <- simulate_dataset(data)
## [1] "Numeric variables. No ordered factors..."
fake_arrests <- cbind(df, sim_data)
head(fake_arrests)
library(fakeR)
state_names <- rownames(USArrests)
df <- tibble(state_names)
data <- USArrests
rownames(data) <- NULL
sim_data <- simulate_dataset(data)
sim_data
cbind(df, sim_data)
df
sim_data
USArrests
USArrests %>%
rownames_to_column(var = state_name)
USArrests %>%
rownames_to_column(var = "state_name")
USArrests %>%
rownames_to_column(var = "state_name") %>%
as_tibble() %>%
janitor::clean_names()
us_arrests_df <- USArrests %>%
rownames_to_column(var = "state_name") %>%
as_tibble() %>%
janitor::clean_names()
fake_us_arrests_df <- simulate_dataset(us_arrests_df)
us_arrests_df <- USArrests %>%
rownames_to_column(var = "state_name") %>%
as_tibble() %>%
janitor::clean_names()
fake_us_arrests_df <- simulate_dataset(us_arrests_df)
fake_us_arrests_df <- simulate_dataset(us_arrests_df %>% select(-state_name))
us_arrests_df %>% select(-state_name)
fake_us_arrests_df <- simulate_dataset(us_arrests_df %>% as.matrix())
us_arrests_df %>% as.matrix
fake_us_arrests_df <- simulate_dataset(us_arrests_df %>% as.matrix)
simulate_dataset(data)
data <- USArrests
rownames(data) <- NULL
data
fake_us_arrests_df <- simulate_dataset(us_arrests_df %>% select(-state_name) %>% as.data.frame)
fake_us_arrests_df <- simulate_dataset(us_arrests_df %>% as.data.frame)
fake_us_arrests_df
us_arrests_df <- USArrests %>%
rownames_to_column(var = "state_name") %>%
as_tibble() %>%
janitor::clean_names()
fake_us_arrests_df <- simulate_dataset(us_arrests_df %>% as.data.frame)
fake_us_arrests_df
USArrests %>%
rownames_to_column(var = "state_name")
USArrests %>%
rownames_to_column(var = "state_name") %>%
inner_join(fake_us_arrests_df)
fake_us_arrests_df <- simulate_dataset(us_arrests_df %>% as.data.frame) %>%
as_tibble()
USArrests %>%
rownames_to_column(var = "state_name") %>%
inner_join(fake_us_arrests_df)
USArrests %>%
rownames_to_column(var = "state_name") %>%
inner_join(fake_us_arrests_df) %>%
as_tibble()
USArrests %>%
rownames_to_column(var = "state_name") %>%
distinct() %>%
left_join(fake_us_arrests_df) %>%
as_tibble()
USArrests %>%
rownames_to_column(var = "state_name") %>%
distinct()
USArrests %>%
rownames_to_column(var = "state_name")
fake_us_arrests_df <- simulate_dataset(us_arrests_df %>% as.data.frame) %>%
distinct() %>%
as_tibble()
fake_us_arrests_df
USArrests %>%
rownames_to_column(var = "state_name") %>%
left_join(fake_us_arrests_df) %>%
as_tibble()
library(fakeR)
us_arrests_df <- USArrests %>%
rownames_to_column(var = "state_name") %>%
as_tibble() %>%
janitor::clean_names()
fake_us_arrests_df <- simulate_dataset(us_arrests_df %>% as.data.frame) %>%
as_tibble()
USArrests %>%
rownames_to_column(var = "state_name") %>%
left_join(fake_us_arrests_df) %>%
as_tibble()
fake_us_arrests_df
devtools::install_github("ThinkR-open/fakir")
devtools::install_github("ThinkR-open/fakir")
# devtools::install_github("ThinkR-open/fakir")
library(fakir)
fake_ticket_client(vol = 10)
tickets_db <- fake_ticket_client(vol = 100, split = TRUE)
tickets_db
fake_products(10)
fake_visits(from = "2017-01-01", to = "2017-01-31")
fake_sondage_answers(n = 10)
fake_sondage_answers(n = 10, split = TRUE)
