gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=lifeExp)) +
geom_line() +
geom_point() +
labs(x="", y="life expectancy",
title="Life expectacy trend",
subtile="South Korea",
caption = "gapminder")
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=lifeExp)) +
geom_line() +
geom_point() +
labs(x="", y="life expectancy",
title="Life expectacy trend",
subtile="South Korea",
caption = "data source: gapminder")
gapminder %>%
filter(str_detect(country, "Korea, Rep"))
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
select(year, lifeExp, pop, gpdPercap) %>%
gather(variable, value, -year)
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
select(year, lifeExp, pop, gdpPercap) %>%
gather(variable, value, -year)
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
select(year, lifeExp, pop, gdpPercap) %>%
gather(variable, value, -year) %>%
ggplot(aes(x=year, y=value, group=variable)) +
geom_line() +
facet_wrap(~variable)
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
select(year, lifeExp, pop, gdpPercap) %>%
gather(variable, value, -year) %>%
ggplot(aes(x=year, y=value, group=variable)) +
geom_line() +
facet_wrap(~variable, scale_y="free")
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
select(year, lifeExp, pop, gdpPercap) %>%
gather(variable, value, -year) %>%
ggplot(aes(x=year, y=value, group=variable)) +
geom_line() +
facet_wrap(~variable, scale="free_y")
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
select(year, lifeExp, pop, gdpPercap) %>%
gather(variable, value, -year) %>%
ggplot(aes(x=year, y=value, group=variable)) +
geom_line() +
facet_wrap(~variable, scale="free_y") +
labs(x="", y="",
title="Main key indicators trends in Korea")
library(plotly)
interactive_ggplot <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
select(year, lifeExp, pop, gdpPercap) %>%
gather(variable, value, -year) %>%
ggplot(aes(x=year, y=value, group=variable)) +
geom_line() +
facet_wrap(~variable, scale="free_y") +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(interactive_ggplot)
interactive_ggplot <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
select(year, lifeExp, pop, gdpPercap) %>%
gather(variable, value, -year) %>%
ggplot(aes(x=year, y=value, group=variable,
text=paste0("GDP per Capita:", gdpPercap)
)) +
geom_line() +
facet_wrap(~variable, scale="free_y") +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(interactive_ggplot, tooltip = "text")
interactive_ggplot <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
select(year, lifeExp, pop, gdpPercap) %>%
ggplot(aes(x=year, y=gdpPercap, group=variable,
text=paste0("GDP per Capita:", gdpPercap)
)) +
geom_line() +
facet_wrap(~variable, scale="free_y") +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(interactive_ggplot, tooltip = "text")
interactive_ggplot <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
select(year, lifeExp, pop, gdpPercap) %>%
ggplot(aes(x=year, y=gdpPercap, group=variable,
text=paste0("GDP per Capita:", gdpPercap)
)) +
geom_line() +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(interactive_ggplot, tooltip = "text")
interactive_ggplot <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
select(year, lifeExp, pop, gdpPercap) %>%
ggplot(aes(x=year, y=gdpPercap,
text=paste0("GDP per Capita:", gdpPercap)
)) +
geom_line() +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(interactive_ggplot, tooltip = "text")
interactive_ggplot <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap,
text=paste0("GDP per Capita:", gdpPercap))) +
geom_line() +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(interactive_ggplot, tooltip = "text")
interactive_ggplot <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap,
text=paste0("GDP per Capita:", gdpPercap))) +
geom_line() +
geom_point() +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(interactive_ggplot, tooltip = "text")
interactive_ggplot <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap,
text=paste0("GDP per Capita: ", gdpPercap,
"Life Expectancy: ", lifeExp))) +
geom_line() +
geom_point() +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(interactive_ggplot, tooltip = "text")
interactive_ggplot <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap,
text=paste0("GDP per Capita: ", gdpPercap, "\n",
"Life Expectancy: ", lifeExp))) +
geom_line() +
geom_point() +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(interactive_ggplot, tooltip = "text")
interactive_ggplot <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap,
text=paste0("GDP per Capita: ", round(gdpPercap,0) "\n",
"Life Expectancy: ", lifeExp))) +
geom_line() +
geom_point() +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(interactive_ggplot, tooltip = "text")
interactive_ggplot <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap,
text=paste0("GDP per Capita: ", round(gdpPercap,0) "\n",
"Life Expectancy: ", lifeExp))) +
geom_line() +
geom_point() +
labs(x="", y="",
title="Main key indicators trends in Korea")
interactive_ggplot <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_line() +
geom_point() +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(interactive_ggplot, tooltip = "text")
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_line() +
geom_point(aes(frame=year)) +
labs(x="", y="",
title="Main key indicators trends in Korea")
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap, group=country,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_line() +
geom_point(aes(frame=year)) +
labs(x="", y="",
title="Main key indicators trends in Korea")
library(gganimate)
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap, group=country,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_line() +
geom_point(aes(frame=year)) +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(life_g)
life_g <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap, group=country,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_point(aes(frame=year)) +
geom_line() +
labs(x="", y="",
title="Main key indicators trends in Korea")
ggplotly(life_g)
life_g <- gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap, group=country,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_point() +
geom_line() +
labs(x="", y="",
title="Main key indicators trends in Korea") +
transition_time(year)
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap, group=country,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_point() +
geom_line() +
labs(x="", y="",
title="Main key indicators trends in Korea") +
transition_time(year)
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap, group=country,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_point() +
geom_line() +
labs(x="", y="",
title="Main key indicators trends in Korea") +
transition_time(year)
library(gganimate)
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap, group=country,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_point() +
geom_line() +
labs(x="", y="",
title="Main key indicators trends in Korea") +
transition_time(year)
gapminder %>%
ggplot(aes(x=gdpPercap, y=lifeExp, group=country, color=country,
text=paste0("Continent: ", continent, "\n",
"Country: ", country, "\n",
"Life Expectancy: ", lifeExp))) +
geom_point(aes(size=gdpPercap)) +
facet_wrap(~continent, ncol=2) +
scale_x_sqrt() +
theme(legend.position = "none") +
transition_time(year) +
labs(title = "Year: {frame_time}")
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap, group=country,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_point() +
geom_line() +
labs(x="", y="",
title="Year: {frame_time}") +
transition_time(year)
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=year, y=gdpPercap, group=country,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_point() +
geom_line() +
transition_time(year) +
labs(x="", y="",
title="Year: {frame_time}")
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, group=country, color=country,
text=paste0("Continent: ", continent, "\n",
"Country: ", country, "\n",
"Life Expectancy: ", lifeExp))) +
geom_point(aes(size=gdpPercap)) +
facet_wrap(~continent, ncol=2) +
scale_x_sqrt() +
theme(legend.position = "none") +
transition_time(year) +
labs(title = "Year: {frame_time}")
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, group=country,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_point() +
geom_line() +
transition_time(year) +
labs(x="", y="",
title="Year: {frame_time}")
gapminder %>%
count(continent)
gapminder %>%
filter(continent %in% c("Africa", "Oceania")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, group=country,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_point(aes(size=pop)) +
geom_line() +
facet_wrap(~continent) +
transition_time(year) +
labs(x="", y="",
title="Year: {frame_time}")
gapminder %>%
filter(continent %in% c("Africa", "Oceania")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, group=country, color=country,
text=paste0("GDP per Capita: ", round(gdpPercap,0), "\n",
"Life Expectancy: ", lifeExp))) +
geom_point(aes(size=pop)) +
geom_line() +
facet_wrap(~continent) +
transition_time(year) +
labs(x="", y="",
title="Year: {frame_time}")
gapminder %>%
filter(str_detect(country, "Korea, Rep")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, group=country, color=country,
text=paste0("Continent: ", continent, "\n",
"Country: ", country, "\n",
"Life Expectancy: ", lifeExp))) +
geom_point(aes(size=gdpPercap)) +
facet_wrap(~continent, ncol=2) +
scale_x_sqrt() +
theme(legend.position = "none") +
transition_time(year) +
labs(title = "Year: {frame_time}")
gapminder %>%
filter(continent %in% c("Africa", "Oceania")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, group=country, color=country)) +
geom_point(aes(size=pop)) +
geom_line() +
facet_wrap(~continent) +
transition_time(year) +
labs(x="", y="",
title="Year: {frame_time}")
gapminder %>%
filter(continent %in% c("Africa", "Oceania")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, group=country, color=country)) +
geom_point(aes(size=gdpPercap)) +
geom_line() +
facet_wrap(~continent) +
transition_time(year) +
labs(x="", y="",
title="Year: {frame_time}")
gapminder %>%
filter(continent %in% c("Africa", "Oceania")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, group=country, color=country)) +
geom_point(aes(size=gdpPercap)) +
facet_wrap(~continent) +
transition_time(year) +
labs(x="", y="",
title="Year: {frame_time}")
gapminder %>%
filter(str_detect(continent, "Africa")) %>%
ggplot(aes(x=year, y=lifeExp, group=country, color=country)) +
geom_line() +
facet_wrap(~country)
gapminder %>%
filter(str_detect(continent, "Africa")) %>%
ggplot(aes(x=year, y=lifeExp, group=country, color=country)) +
geom_line() +
facet_wrap(~country)
gapminder %>%
filter(str_detect(continent, "Africa")) %>%
ggplot(aes(x=year, y=lifeExp, group=country, color=country)) +
geom_line() +
facet_wrap(~country)
gapminder %>%
filter(str_detect(continent, "Africa"))
gapminder %>%
filter(continent %in% "Americas") %>%
ggplot(aes(x=year, y=lifeExp, group=country, color=country)) +
geom_point(aes(size=gdpPercap)) +
geom_line() +
facet_wrap(~country, ncol=2) +
scale_x_sqrt() +
theme(legend.position = "none")
library(tidyverse)
library(gapminder)
library(tidyverse)
library(gapminder)
gapminder %>%
filter(str_detect(continent, "Africa")) %>%
ggplot(aes(x=year, y=lifeExp, group=country, color=country)) +
geom_line() +
facet_wrap(~country)
gapminder %>%
filter(str_detect(continent, "Africa")) %>%
ggplot(aes(x=year, y=lifeExp, group=country, color=country)) +
geom_line() +
facet_wrap(~country) +
theme(legend.position = "non")
gapminder %>%
filter(str_detect(continent, "Africa")) %>%
ggplot(aes(x=year, y=lifeExp, group=country, color=country)) +
geom_line() +
facet_wrap(~country) +
theme(legend.position = "none")
gapminder_nest <- gapminder %>%
group_by(continent, country) %>%
nest()
gapminder_nest
gapminder_nest$data[1]
gapminder_nest$data[[1]] %>%
plot_ly(x=~year, y=~lifeExp) %>%
add_markers() %>%
add_lines()
library(plotly)
gapminder_nest$data[[1]] %>%
plot_ly(x=~year, y=~lifeExp) %>%
add_markers() %>%
add_lines()
visualize_lifeExp <- function(df) {
plot_ly(df, x=~year, y=~lifeExp) %>%
add_markers() %>%
add_lines()
}
gapminder_nest %>%
mutate(panel = map_plot(data, visualize_lifeExp()))
library(trelliscopejs)
gapminder_nest %>%
mutate(panel = map_plot(data, visualize_lifeExp()))
gapminder_nest <- gapminder %>%
group_by(continent, country) %>%
nest()
visualize_lifeExp <- function(df) {
plot_ly(df, x=~year, y=~lifeExp) %>%
add_markers() %>%
add_lines()
}
gapminder_nest %>%
mutate(panel = map_plot(data, visualize_lifeExp()))
gapminder_nest %>%
mutate(panel = map_plot(data, visualize_lifeExp))
gapminder_plot_df <- gapminder_nest %>%
mutate(panel = map_plot(data, visualize_lifeExp))
trelliscope(gapminder_plot_df)
trelliscope(gapminder_plot_df,
name="first_gapminder")
library(rayshader)
montereybay %>%
sphere_shade(zscale = 10, texture = "imhof1") %>%
add_shadow(ray_shade(montereybay, zscale = 50)) %>%
add_shadow(ambient_shade(montereybay, zscale = 50)) %>%
plot_3d(montereybay, zscale = 50, theta = -45, phi = 45, water = TRUE,
windowsize = c(1000,800), zoom = 0.75, waterlinealpha = 0.3,
wateralpha = 0.5, watercolor = "lightblue", waterlinecolor = "white")
render_snapshot()
install.packages("rayshader")
library(rayshader)
montereybay %>%
sphere_shade(zscale = 10, texture = "imhof1") %>%
add_shadow(ray_shade(montereybay, zscale = 50)) %>%
add_shadow(ambient_shade(montereybay, zscale = 50)) %>%
plot_3d(montereybay, zscale = 50, theta = -45, phi = 45, water = TRUE,
windowsize = c(1000,800), zoom = 0.75, waterlinealpha = 0.3,
wateralpha = 0.5, watercolor = "lightblue", waterlinecolor = "white")
render_snapshot()
library(leaflet)
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -122.522, lat = 37.707),
p2 = list(long = -122.354, lat = 37.84)
)
leaflet() %>%
addTiles() %>%
addRectangles(
lng1 = bbox$p1$long, lat1 = bbox$p1$lat,
lng2 = bbox$p2$long, lat2 = bbox$p2$lat,
fillColor = "transparent"
) %>%
fitBounds(
lng1 = bbox$p1$long, lat1 = bbox$p1$lat,
lng2 = bbox$p2$long, lat2 = bbox$p2$lat,
)
setwd("C:/docs/comp_document")
setwd("C:/docs/ingest-data")
# 0. 환경설정 -----
# library(botrnot) # devtools::install_github("mkearney/botrnot")
library(rtweet)  # devtools::install_github("mkearney/rtweet")
devtools::install_github("mkearney/rtweet")
devtools::install_github("mkearney/rtweet")
install.packages("httr")
install.packages("progress")
devtools::install_github("mkearney/rtweet")
devtools::install_github("mkearney/rtweet")
devtools::install_github("mkearney/rtweet")
install.packages("Rcpp")
install.packages("Rcpp")
devtools::install_github("mkearney/rtweet")
install.packages(c("anytime", "bayesplot", "BH", "bibtex", "bookdown", "broom", "callr", "car", "carData", "caret", "caTools", "CGPfunctions", "cholera", "chron", "cli", "clipr", "coda", "cowplot", "curl", "data.table", "DBI", "dbplyr", "deldir", "DescTools", "devtools", "dials", "digest", "drake", "DT", "e1071", "emmeans", "evaluate", "farver", "forecast", "fracdiff", "future", "gdtools", "gganimate", "ggcorrplot", "ggforce", "ggpubr", "ggraph", "ggrepel", "ggsignif", "ggstance", "ggthemes", "git2r", "globals", "googleVis", "gtrendsR", "gutenbergr", "haven", "hexbin", "Hmisc", "hms", "htmlTable", "htmlwidgets", "httpuv", "igraph", "infer", "ISOcodes", "jpeg", "keras", "knitr", "lambda.r", "later", "leaflet", "listenv", "listviewer", "lme4", "lmtest", "loo", "magick", "maptools", "mapview", "markdown", "matrixStats", "microbenchmark", "mime", "nycflights13", "openssl", "openxlsx", "parsnip", "patchwork", "pdftools", "PerformanceAnalytics", "pillar", "pkgbuild", "plotly", "plyr", "polynom", "pracma", "pROC", "processx", "prodlim", "promises", "quadprog", "quantmod", "quantreg", "R.cache", "R.oo", "R.utils", "R6", "raster", "rayshader", "RcppArmadillo", "RcppEigen", "RcppParallel", "recipes", "rematch2", "reprex", "reticulate", "rgdal", "rgeos", "rgl", "RJSONIO", "rlang", "rmarkdown", "roxygen2", "rsample", "rsconnect", "rstan", "rstanarm", "rstantools", "rvest", "satellite", "scales", "selectr", "servr", "shiny", "shinyFiles", "showtext", "skimr", "slam", "sp", "SparseM", "StanHeaders", "svglite", "sys", "tensorflow", "tesseract", "testthat", "textfeatures", "textrecipes", "tidybayes", "tidymodels", "tidypredict", "tidytext", "tidyverse", "tinytex", "tm", "tseries", "tsibble", "TSP", "TTR", "txtq", "units", "vctrs", "visNetwork", "vitae", "webshot", "whisker", "xaringan", "xfun", "XML", "xml2", "yardstick", "zip", "zoo"))
