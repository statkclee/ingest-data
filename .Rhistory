# Chunk 1
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE,
comment="", digits = 3, tidy = FALSE, prompt = FALSE, fig.align = 'center')
# Chunk 2: tsibble-setup
library(tidyverse)
library(tsibble)
library(lubridate)
weather <- nycflights13::weather %>%
select(origin, time_hour, temp, humid, precip)
weather
# Chunk 3: tsibble-coerce
weather_tsbl <- as_tsibble(weather, index=time_hour, key=id(origin))
weather_tsbl
# Chunk 4: tsibble-data-manipulation
weather_tsbl %>%
group_by(origin) %>%
index_by(month = yearmonth(time_hour)) %>%
summarise(
temp_high = max(temp, na.rm = TRUE),
temp_average = mean(temp, na.rm = TRUE),
temp_low = min(temp, na.rm = TRUE)
) %>%
DT::datatable()
# Chunk 5: tsibble-data-irregular
flights <- nycflights13::flights %>%
mutate(sched_dep_datetime = make_datetime(year, month, day, hour, minute, tz = "America/New_York")) %>%
select(carrier, flight, year, month, day, hour, minute, sched_dep_datetime, dep_delay)
flights
# Chunk 6: tsibble-data-irregular-convert
flights_tsbl <- as_tsibble(flights, key=id(carrier, flight),
index=sched_dep_datetime,
regular = FALSE)
flights_tsbl
# Chunk 7: tsibble-data-irregular-convert-fix
flights_tsbl %>%
group_by(carrier, flight) %>%
index_by(month = yearmonth(sched_dep_datetime)) %>%
summarise(delay_mean = mean(dep_delay, na.rm=TRUE)) %>%
arrange(desc(delay_mean))
# Chunk 8: tsibble-na
pedestrian
has_gaps(pedestrian)
# Chunk 9: tsibble-na-count
pedestrian %>%
count_gaps(.fill=TRUE) %>%
arrange(desc(.n))
# Chunk 10: tsibble-na-scan
pedestrian %>%
filter(Sensor == "Bourke Street Mall (North)") %>%
scan_gaps()
# Chunk 11: tsibble-na-viz
pedestrian %>%
count_gaps(.fill=TRUE) %>%
ggplot(aes(x = Sensor, colour = Sensor)) +
geom_linerange(aes(ymin = .from, ymax = .to)) +
geom_point(aes(y = .from)) +
geom_point(aes(y = .to)) +
coord_flip() +
theme(legend.position = "top") +
labs(x="")
# Chunk 12: tsibble-na-fill
na_g <- pedestrian %>%
fill_gaps(.full=TRUE) %>%
ggplot(aes(x=Date_Time, y=Count, color=Sensor)) +
geom_line() +
facet_wrap(~Sensor) +
theme(legend.position = "none")
fill_g <- pedestrian %>%
fill_gaps(Count = mean(Count), .full=TRUE) %>%
ggplot(aes(x=Date_Time, y=Count, color=Sensor)) +
geom_line() +
facet_wrap(~Sensor) +
theme(legend.position = "none")
cowplot::plot_grid(na_g, fill_g)
# Chunk 13: tsibble-pedestrian
pedestrian_tsbl <- pedestrian %>%
fill_gaps(.full = TRUE)
pedestrian_tsbl
# Chunk 14: tsibble-pedestrian-ma
pedestrian_tsbl %>%
group_by(Sensor) %>%
mutate(Daily_MA = slide_dbl(Count, mean, na.rm = TRUE, .size = 3, .align = "center"
))
# Chunk 15: tsibble-pedestrian-map
pedestrian_mth_tsbl <- pedestrian_tsbl %>%
mutate(YrMth = yearmonth(Date_Time)) %>%
nest(-Sensor, -YrMth)
pedestrian_mth_tsbl
# Chunk 16: tsibble-pedestrian-map-combine
pedestrian_mth_tsbl %>%
group_by(Sensor) %>%
mutate(Monthly_MA = slide_dbl(data,
~ mean(.$Count, na.rm = TRUE), .size = 3, .align = "center", .bind = TRUE
))
# Chunk 17: tsibble-pedestrian-map-lm
fit_reg <- function(...) {
data <- tibble(...)
fit <- lm(Count ~ Time, data = data)
list(fitted = fitted(fit), resid = residuals(fit))
}
pedestrian_reg_tsbl <- pedestrian %>%
filter_index(~ "2015-03") %>%
nest(-Sensor) %>%
mutate(diag = purrr::map(data, ~ pslide_dfr(., fit_reg, .size = 24 * 7)))
pedestrian_reg_tsbl$diag
pedestrian_reg_tsbl <- pedestrian %>%
filter_index(~ "2015-03") %>%
nest(-Sensor) %>%
mutate(reg = purrr::map(data, ~ pslide_dfr(., fit_reg, .size = 24 * 7)))
pedestrian_reg_tsbl$reg[[1]]
pedestrian_reg_tsbl
devtools::install_github("gadenbuie/regexplain")
remove.packages("rlang", lib="~/R/win-library/3.5")
devtools::install_github("gadenbuie/regexplain")
devtools::install_github("gadenbuie/regexplain")
.libPaths()
devtools::install_github("gadenbuie/regexplain")
install.packages("rlang")
devtools::install_github("gadenbuie/regexplain")
source("https://install-github.me/gadenbuie/regexplain")
source("https://install-github.me/gadenbuie/regexplain", force = TRUE
)
source("https://install-github.me/gadenbuie/regexplain", force = TRUE)
devtools::install_github("gadenbuie/regexplain", force=TRUE)
library(regexplain)
regexplain:::regexplain_addin()
dplyr::starwars$films
dplyr::starwars$films
dplyr::starwars$films
regexplain:::regexplain_cheatsheet()
library(regexplain)
regexplain:::regexplain_file()
regexplain:::regexplain_addin()
dplyr::starwars$films %>% unlist
library(tidyverse)
dplyr::starwars$films %>% unlist()
regexplain:::regexplain_addin()
library(tensorflow)
remove.packages("tensorflow")
.libPaths()
install.packages("tensorflow")
library(tensorflow)
sess = tf$Session()
hello <- tf$constant('Hello, TensorFlow!')
sess$run(hello)
setwd("D:/docs/ingest-data")
setwd("D:/docs/ingest-data")
library(tidyverse)
library(tesseract)
library(magick)
jangpyo_img <- image_read("fig/ppt-jangpyo.jpg") %>%
image_convert() %>%
image_rotate(., 270) %>%
image_trim(fuzz = 40)
jangpyo_img
jangpyo_img <- image_read("fig/ppt-jangpyo.jpg") %>%
image_convert() %>%
image_rotate(.,0) %>%
image_trim(fuzz = 40)
jangpyo_img
장표제목 <- image_crop(img, geometry_area(105, 15, 530, 50), repage = FALSE) %>%
image_ocr_data(language = "kor") %>%
select(word) %>%
pull() %>%
paste0(collapse=" ")
## 장표 제목
장표제목 <- image_crop(jangpyo_img, geometry_area(105, 15, 530, 50), repage = FALSE) %>%
image_ocr_data(language = "kor") %>%
select(word) %>%
pull() %>%
paste0(collapse=" ")
장표제목
image_crop(jangpyo_img, geometry_area(105, 15, 530, 50), repage = FALSE)
image_crop(jangpyo_img, geometry_area(105, 15, 530, 50), repage = FALSE) %>%
image_ocr_data(language = "kor")
image_crop(img, geometry_area(210, 130, 610, 200), repage = FALSE) %>%
image_ocr_data(language = "kor") %>%
select(word) %>%
pull() %>%
paste0(collapse="")
image_crop(jangpyo_img, geometry_area(210, 130, 610, 200), repage = FALSE) %>%
image_ocr_data(language = "kor") %>%
select(word) %>%
pull() %>%
paste0(collapse="")
ppt_box <- image_draw(jangpyo_img)
rect(105, 15, 530, 50, border = "blue", lwd = 5)
dev.off()
ppt_box
ppt_box <- image_draw(jangpyo_img)
rect(105, 25, 530, 53, border = "red", lwd = 5)
dev.off()
ppt_box
ppt_box <- image_draw(jangpyo_img)
rect(100, 25, 530, 53, border = "red", lwd = 5)
dev.off()
ppt_box
ppt_box <- image_draw(jangpyo_img)
rect(90, 25, 530, 53, border = "red", lwd = 5)
dev.off()
ppt_box
장표제목 <- image_crop(jangpyo_img, geometry_area(90, 25, 530, 53), repage = FALSE) %>%
image_ocr_data(language = "kor") %>%
select(word) %>%
pull() %>%
paste0(collapse=" ")
장표제목
ppt_box <- image_draw(jangpyo_img)
rect(90, 25, 530, 53, border = "red", lwd = 5)
rect(210, 130, 610, 200, border = "red", lwd = 5)
dev.off()
ppt_box
ppt_box <- image_draw(jangpyo_img)
rect(90, 25, 530, 53, border = "red", lwd = 5)
rect(190, 130, 610, 200, border = "red", lwd = 5)
dev.off()
ppt_box
ppt_box <- image_draw(jangpyo_img)
rect(90, 25, 530, 53, border = "red", lwd = 5)
rect(190, 130, 590, 200, border = "red", lwd = 5)
dev.off()
ppt_box
image_crop(jangpyo_img, geometry_area(190, 130, 590, 200), repage = FALSE) %>%
image_ocr_data(language = "kor") %>%
select(word) %>%
pull() %>%
paste0(collapse="")
ppt_box <- image_draw(jangpyo_img)
rect(90, 25, 530, 53, border = "red", lwd = 5)
rect(190, 130, 590, 200, border = "red", lwd = 5)
dev.off()
ppt_box
? image_ocr_data
tesseract_download("kor")
image_crop(jangpyo_img, geometry_area(90, 25, 530, 53), repage = FALSE) %>%
image_ocr_data(language = "kor") %>%
select(word) %>%
pull() %>%
paste0(collapse=" ")
kor <- tesseract("kor")
장표제목 <- image_crop(jangpyo_img, geometry_area(90, 25, 530, 53), repage = FALSE) %>%
image_ocr_data(language = kor) %>%
select(word) %>%
pull() %>%
paste0(collapse=" ")
image_crop(jangpyo_img, geometry_area(90, 25, 530, 53), repage = FALSE) %>%
image_ocr_data(language = kor) %>%
select(word)
image_crop(jangpyo_img, geometry_area(90, 25, 530, 53), repage = FALSE) %>%
image_ocr_data(language = "kor")
image_crop(jangpyo_img, geometry_area(190, 130, 590, 200), repage = FALSE) %>%
image_ocr_data(language = "kor") %>%
select(word)
image_crop(jangpyo_img, geometry_area(190, 130, 590, 200), repage = FALSE) %>%
image_convert(type = 'Bilevel') %>%
image_ocr_data(language = "kor") %>%
select(word)
image_crop(jangpyo_img, geometry_area(90, 25, 530, 53), repage = FALSE) %>%
image_convert(type = 'Bilevel') %>%
image_ocr_data(language = "kor") %>%
select(word)
image_crop(jangpyo_img, geometry_area(90, 25, 530, 53), repage = FALSE) %>%
image_convert(type = 'Bilevel')
info(jangpyo_img)
image_info(jangpyo_img)
jangpyo_img <- image_read("fig/ppt-jangpyo.jpg") %>%
image_convert() %>%
image_rotate(.,0) %>%
image_trim(fuzz = 40)
image_info(jangpyo_img)
jangpyo_img
ppt_box <- image_draw(jangpyo_img)
rect(90, 25, 530, 53, border = "red", lwd = 5)
rect(190, 130, 590, 200, border = "red", lwd = 5)
dev.off()
ppt_box
image_crop(jangpyo_img, geometry_area(90, 25, 530, 53), repage = FALSE)
image_crop(jangpyo_img, geometry_area(90, 25, 530, 53), repage = FALSE) %>%
image_convert(type = 'Bilevel') %>%
image_ocr_data(language = "kor")
image_crop(jangpyo_img, geometry_area(90, 25, 530, 53), repage = FALSE) %>%
image_convert(type = 'Bilevel')
image_crop(jangpyo_img, geometry_area(190, 130, 590, 200), repage = FALSE)
image_crop(jangpyo_img, geometry_area(215, 130, 590, 190), repage = FALSE)
jangpyo_img <- image_read("fig/ppt-jangpyo.jpg") %>%
image_convert() %>%
image_rotate(.,0) %>%
image_trim(fuzz = 40)
image_info(jangpyo_img)
jangpyo_img
image_crop(jangpyo_img, geometry_area(90, 25, 530, 53), repage = FALSE) %>%
image_convert(type = 'Bilevel')
? image_crop
image_crop(jangpyo_img, geometry_area(90, 25, 530-90, 53-25), repage = FALSE) %>%
image_convert(type = 'Bilevel')
image_crop(jangpyo_img, geometry_area(90, 25, 530+90, 53+25), repage = FALSE) %>%
image_convert(type = 'Bilevel')
image_crop(jangpyo_img, geometry_area(90, 25, 530+90, 53+25), repage = FALSE) %>%
image_convert(type = 'Bilevel')
image_crop(jangpyo_img, geometry_area(90, 25, 530, 53), repage = FALSE) %>%
image_convert(type = 'Bilevel')
image_crop(jangpyo_img, geometry_area(x_off=90, y_off=25, 530-90, 53-25), repage = FALSE) %>%
image_convert(type = 'Bilevel')
## 장표 제목
장표제목 <- image_crop(jangpyo_img, geometry_area(x_off=90, y_off=25, 530-90, 53-25), repage = FALSE) %>%
image_convert(type = 'Bilevel') %>%
image_ocr_data(language = "kor") %>%
select(word) %>%
pull() %>%
paste0(collapse=" ")
장표제목
## 장표 제목
장표제목 <- image_crop(jangpyo_img, geometry_area(x_off=90, y_off=25, 530-90, 53-25), repage = FALSE) %>%
image_convert(type = 'Bilevel') %>%
image_ocr_data(language = "kor", encoding="utf-8") %>%
select(word) %>%
pull() %>%
paste0(collapse=" ")
? image_ocr_data
image_crop(jangpyo_img, geometry_area(x_off=90, y_off=25, 530-90, 53-25), repage = FALSE) %>%
image_convert(type = 'Bilevel') %>%
image_ocr_data(language = "kor") %>%
select(word)
image_crop(jangpyo_img, geometry_area(x_off=90, y_off=25, 530-90, 53-25), repage = FALSE) %>%
image_trim() %>%
image_noise() %>%
image_enhance() %>%
image_normalize() %>%
image_crop(jangpyo_img, geometry_area(x_off=90, y_off=25, 530-90, 53-25), repage = FALSE) %>%
image_trim() %>%
image_noise() %>%
image_enhance() %>%
image_normalize() %>%
image_contrast(sharpen = 1)
image_crop(jangpyo_img, geometry_area(x_off=90, y_off=25, 530-90, 53-25), repage = FALSE) %>%
image_trim() %>%
image_noise() %>%
image_enhance() %>%
image_normalize() %>%
image_contrast(sharpen = 1)
image_crop(jangpyo_img, geometry_area(x_off=90, y_off=25, 530-90, 53-25), repage = FALSE) %>%
image_trim() %>%
image_noise() %>%
image_enhance() %>%
image_normalize() %>%
image_contrast(sharpen = 1)
image_ocr_data(language = "kor")
image_crop(jangpyo_img, geometry_area(x_off=90, y_off=25, 530-90, 53-25), repage = FALSE) %>%
image_trim() %>%
image_noise() %>%
image_enhance() %>%
image_normalize() %>%
image_contrast(sharpen = 1) %>%
image_ocr_data(language = "kor")
image_crop(jangpyo_img, geometry_area(x_off=215, y_off=130, 590-215, 190-130), repage = FALSE) %>%
image_convert(type = 'Bilevel')
jangpyo_img <- image_read("fig/ppt-jangpyo.jpg") %>%
image_convert() %>%
image_rotate(.,0) %>%
image_trim(fuzz = 40)
image_info(jangpyo_img)
jangpyo_img
image_crop(jangpyo_img, geometry_area(x_off=215, y_off=130, 590-215, 190-130), repage = FALSE) %>%
image_convert(type = 'Bilevel') %>%
image_ocr_data(language = "kor")
image_crop(jangpyo_img, geometry_area(x_off=215, y_off=130, 590-215, 190-130), repage = FALSE) %>%
image_convert(type = 'Bilevel')
image_crop(jangpyo_img, geometry_area(x_off=185, y_off=90, 590-185, 200-90), repage = FALSE) %>%
image_convert(type = 'Bilevel') %>%
image_ocr_data(language = "kor")
image_crop(jangpyo_img, geometry_area(x_off=185, y_off=90, 590-185, 200-90), repage = FALSE) %>%
image_convert(type = 'Bilevel')
image_crop(jangpyo_img, geometry_area(x_off=185, y_off=85, 590-185, 200-85), repage = FALSE) %>%
image_convert(type = 'Bilevel')
image_crop(jangpyo_img, geometry_area(x_off=185, y_off=85, 590-185, 200-99), repage = FALSE) %>%
image_convert(type = 'Bilevel')
image_crop(jangpyo_img, geometry_area(x_off=185, y_off=80, 590-185, 200-99), repage = FALSE) %>%
image_convert(type = 'Bilevel')
ppt_box <- image_draw(jangpyo_img)
rect(90, 25, 530, 53, border = "red", lwd = 5)
rect(185, 80, 590, 200, border = "red", lwd = 5)
dev.off()
ppt_box
ppt_box <- image_draw(jangpyo_img)
rect(90, 25, 530, 53, border = "red", lwd = 5)
rect(185, 80, 590, 200, border = "red", lwd = 5)
dev.off()
ppt_box
ppt_box <- image_draw(jangpyo_img)
rect(90, 15, 530, 53, border = "red", lwd = 5)
rect(185, 80, 590, 200, border = "red", lwd = 5)
dev.off()
ppt_box
ppt_box <- image_draw(jangpyo_img)
rect(80, 05, 530, 53, border = "red", lwd = 5)
rect(185, 80, 590, 200, border = "red", lwd = 5)
dev.off()
ppt_box
ppt_box <- image_draw(jangpyo_img)
rect(80, 05, 530, 33, border = "red", lwd = 5)
rect(185, 80, 590, 200, border = "red", lwd = 5)
dev.off()
ppt_box
ppt_box <- image_draw(jangpyo_img)
rect(80, 05, 530, 35, border = "red", lwd = 5)
rect(185, 80, 590, 200, border = "red", lwd = 5)
dev.off()
ppt_box
