drive_find(type = "xls")
drive_find(type = "spreadsheet")
spreadsheet_list <- drive_find(type = "spreadsheet")
spreadsheet_list
spreadsheet_list %>%
filter(str_detect(name, "발표자"))
spreadsheet_list %>%
filter(str_detect(name, "발표자")) %>%
pull(id)
get_file_id <- spreadsheet_list %>%
filter(str_detect(name, "발표자")) %>%
pull(id)
googlesheets4::read_sheet(get_file_id)
presenter <- googlesheets4::read_sheet(get_file_id)
presenter %>%
janitor::clean_names(ascii = FALSE)
presenter %>%
janitor::clean_names(ascii = FALSE) %>%
select(1:5)
presenter %>%
janitor::clean_names(ascii = FALSE) %>%
select(1:5) %>%
filter(!is.na(발표자명))
presenter %>%
janitor::clean_names(ascii = FALSE) %>%
select(1:5) %>%
filter(!is.na(구분_5))
presenter %>%
janitor::clean_names(ascii = FALSE) %>%
select(1:5) %>%
filter(!is.na(구분_5)) %>%
DT::datatable()
spreadsheet_list
drive_download(발표자_대쉬보드, path = "data/rconf_presenter.xlsx")
? drive_download
file_id <- spreadsheet_list %>%
filter(str_detect(name, "발표자")) %>%
pull(id)
presenter <- googlesheets4::read_sheet(file_id)
presenter
drive_download(file_id, path = "data/rconf_presenter.xlsx", overwrite = TRUE, type = "csv")
drive_download(file_id, path = "data/rconf_presenter", overwrite = TRUE, type = "csv")
drive_download(file_id, path = "data/rconf_presenter", overwrite = TRUE, type = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
library(readxl)
rconf_tbl <- read_excel("data/rconf_presenter")
rconf_tbl <- read_excel("data/rconf_presenter.xlsx")
janitor::clean_names(ascii = FALSE) %>%
select(1:5) %>%
filter(!is.na(구분_5)) %>%
DT::datatable()
rconf_tbl %>%
janitor::clean_names(ascii = FALSE) %>%
select(1:5) %>%
filter(!is.na(구분_5)) %>%
DT::datatable()
install.packages("writexl")
library(writexl)
rconf_tbl %>%
write_xlsx("data/rconf.xlsx")
drive_upload("data/rconf.xlsx",
path = "submission/rconf.xlsx",
type = "spreadsheet")
rconf_raw <- read_excel("data/rconf_presenter.xlsx")
rconf_tbl <- rconf_raw %>%
janitor::clean_names(ascii = FALSE) %>%
select(1:5) %>%
filter(!is.na(구분_5))
rconf_tbl %>%
DT::datatable()
rconf_tbl
rconf_tbl %>%
write_xlsx("data/rconf.xlsx")
drive_upload("data/rconf.xlsx",
path = "submission/rconf.xlsx",
type = "spreadsheet")
drive_upload("data/rconf.xlsx",
path = "submission/rconf.xlsx",
type = "spreadsheet",
overwrite = TRUE)
spreadsheet_list <- drive_find(type = "spreadsheet")
spreadsheet_list
file_id <- spreadsheet_list %>%
filter(str_detect(name, "발표자")) %>%
pull(id)
file_id
presenter <- googlesheets4::read_sheet(file_id)
presenter %>%
janitor::clean_names(ascii = FALSE) %>%
select(1:5) %>%
filter(!is.na(구분_5)) %>%
DT::datatable()
spreadsheet_list
presenter
presenter %>%
janitor::clean_names(ascii = FALSE) %>%
select(1:5)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE,
comment="", digits = 3, tidy = FALSE, prompt = FALSE, fig.align = 'center')
# Chunk 2: googledrive-find
library(tidyverse)
library(googledrive)
spreadsheet_list <- drive_find(type = "spreadsheet")
spreadsheet_list
# Chunk 3: googledrive-read-file
file_id <- spreadsheet_list %>%
filter(str_detect(name, "대쉬보드")) %>%
pull(id)
# presenter <- googlesheets4::read_sheet(file_id)
#
# presenter %>%
#   janitor::clean_names(ascii = FALSE) %>%
#   select(1:5) %>%
#   filter(!is.na(구분_5)) %>%
#   DT::datatable()
# Chunk 4: googledrive-download-file
## CSV -----
drive_download(file_id, path = "data/rconf_presenter", overwrite = TRUE, type = "csv")
## 엑셀 -----
drive_download(file_id, path = "data/rconf_presenter", overwrite = TRUE, type = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
# Chunk 5: googledrive-download-file-check
library(readxl)
rconf_raw <- read_excel("data/rconf_presenter.xlsx")
rconf_tbl <- rconf_raw %>%
janitor::clean_names(ascii = FALSE) %>%
select(1:5) %>%
filter(!is.na(구분_5))
rconf_tbl %>%
DT::datatable()
# Chunk 6: writexl-drive-upload
library(writexl)
rconf_tbl %>%
write_xlsx("data/rconf.xlsx")
drive_upload("data/rconf.xlsx",
path = "submission/rconf.xlsx",
type = "spreadsheet",
overwrite = TRUE)
file_id
file_id <- spreadsheet_list %>%
filter(str_detect(name, "대쉬보드")) %>%
pull(id)
file_id
file_id %>% class()
as_id(file_id)
drive_get(as_id(file_id))
presenter <- googlesheets4::read_sheet(drive_get(as_id(file_id)))
presenter <- googlesheets4::read_sheet(drive_get(file_id))
file_id <- spreadsheet_list %>%
filter(str_detect(name, "대쉬보드"))
presenter <- googlesheets4::read_sheet(file_id)
presenter %>%
janitor::clean_names(ascii = FALSE) %>%
select(1:5) %>%
filter(!is.na(구분_5)) %>%
DT::datatable()
drive_user
drive_user()
gs4_user()
library(googlesheets4)
gs4_user()
file_id <- spreadsheet_list %>%
filter(str_detect(name, "대쉬보드"))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE,
comment="", digits = 3, tidy = FALSE, prompt = FALSE, fig.align = 'center')
# Chunk 2: googledrive-find
library(tidyverse)
library(googledrive)
library(googlesheets4)
spreadsheet_list <- drive_find(type = "spreadsheet")
spreadsheet_list
file_id <- spreadsheet_list %>%
filter(str_detect(name, "대쉬보드"))
file_id
presenter <- googlesheets4::read_sheet(file_id)
gs4_get(file_id)
? drive_find
drive_find(q = "name contains '대쉬보드'")
file_id <- drive_get(q = "name contains '대쉬보드'")
file_id <- spreadsheet_list %>%
filter(str_detect(name, "대쉬보드"))
presenter <- googlesheets4::read_sheet(drive_get(file_id))
gs4_get(file_id)
presenter %>%
janitor::clean_names(ascii = FALSE) %>%
select(1:5) %>%
filter(!is.na(구분_5)) %>%
DT::datatable()
file_id <- spreadsheet_list %>%
filter(str_detect(name, "대쉬보드")) %>%
pull(id)
presenter <- googlesheets4::read_sheet(drive_get(file_id))
file_id
drive_get(file_id)
drive_get("발표자_대쉬보드")
presenter <- googlesheets4::read_sheet(drive_get("발표자_대쉬보드"))
drive_get("발표자_대쉬보드")
spreadsheet_list
library(tidyverse)
library(googledrive)
library(googlesheets4)
spreadsheet_list <- drive_find(type = "spreadsheet")
spreadsheet_list
drive_get("dashboard")
spreadsheet_list
file_id <- drive_get("rconf")
presenter <- googlesheets4::read_sheet(file_id)
spreadsheet_list
library(tidyverse)
library(readxl)
jpub_raw <- read_excel("data/후원도서_한국 R 컨퍼런스.xlsx")
jpub_raw
jpub_raw %>%
set_names(c("URL", "title", "publisher", "price", "quantity", "description"))
library(tidyverse)
library(readxl)
jpub_raw <- read_excel("data/후원도서_한국 R 컨퍼런스.xlsx")
jpub_tbl <- jpub_raw %>%
set_names(c("URL", "title", "publisher", "price", "quantity", "description"))
jpub_tbl
library(reactable)
library(tidyverse)
library(readxl)
library(reactable)
jpub_raw <- read_excel("data/후원도서_한국 R 컨퍼런스.xlsx")
jpub_tbl <- jpub_raw %>%
set_names(c("address", "title", "publisher", "price", "quantity", "description"))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
})))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "KOR", separators = TRUE, locales = "ko-KR"))))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "U+20A9", separators = TRUE, locales = "ko-KR"))))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "U+20A9", separators = TRUE, locales = "ko-KR"))))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "₩", separators = TRUE, locales = "ko-KR"))))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR"))))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
quantity =  colDef(format = colFormat(minWidth = 100))
))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
quantity =  colDef(minWidth = 100))
))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
quantity =  colDef(minWidth = 100))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
quantity =  colDef(minWidth = 100),
price =  colDef(minWidth = 100))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
publisher =  colDef(minWidth = 100),
quantity =  colDef(minWidth = 100),
price =  colDef(minWidth = 100))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
publisher =  colDef(minWidth = 100),
quantity =  colDef(minWidth = 100),
description =  colDef(minWidth = 300))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
publisher =  colDef(minWidth = 50),
quantity =  colDef(minWidth = 50),
description =  colDef(minWidth = 300))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(minWidth = 70, format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
publisher =  colDef(minWidth = 70),
quantity =  colDef(minWidth = 70),
description =  colDef(minWidth = 300))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(minWidth = 80, format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
publisher =  colDef(minWidth = 80),
quantity =  colDef(minWidth = 80),
description =  colDef(minWidth = 300))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(minWidth = 80, format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
publisher =  colDef(minWidth = 150),
publisher =  colDef(minWidth = 80),
quantity =  colDef(minWidth = 80),
description =  colDef(minWidth = 300))
)
jpub_fs <- fs::dir_ls("data/한국 R 컨퍼런스 후원도서 표지/")
jpub_fs
jpub_tbl
jpub_tbl %>%
mutate(image = jpub_fs)
jpub_tbl <- jpub_tbl %>%
mutate(image = jpub_fs)
img_src <- knitr::image_uri(sprintf("images/%s.png", value))
library(htmltools)
jpub_fs <- fs::dir_ls("data/한국 R 컨퍼런스 후원도서 표지/")
jpub_tbl <- jpub_tbl %>%
mutate(image = jpub_fs)
jpub_tbl %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(sprintf("images/%s.png", value))
image <- img(src = img_src, height = "24px", alt = "")
tagList(
div(style = list(display = "inline-block", width = "45px"), image),
value
)
})
))
img_src <- knitr::image_uri(value)
jpub_tbl %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "24px", alt = "")
tagList(
div(style = list(display = "inline-block", width = "45px"), image),
value
)
})
))
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "24px", alt = "")
tagList(
div(style = list(display = "inline-block", width = "45px"), image),
value
)
})
))
jpub_tbl %>%
select(image, everything())
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "24px", alt = "")
})
))
image <- img(src = img_src, height = "70px", alt = "")
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "70px", alt = "")
})
))
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "100px", alt = "")
})
))
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "100px", alt = "")
}),
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(minWidth = 80, format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
title =  colDef(minWidth = 150),
publisher =  colDef(minWidth = 80),
quantity =  colDef(minWidth = 80),
description =  colDef(minWidth = 300))
))
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "100px", alt = "")
}),
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(minWidth = 80, format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
title =  colDef(minWidth = 150),
publisher =  colDef(minWidth = 80),
quantity =  colDef(minWidth = 80),
description =  colDef(minWidth = 300)
))
jpub_tbl
jpub_tbl %>%
summarise(total_books = sum(quantity))
jpub_tbl %>%
summarise(total_books = sum(quantity)) %>%
pull()
jpub_book_quantiy <- jpub_tbl %>%
summarise(total_books = sum(quantity)) %>%
pull()
jpub_tbl %>%
summarise(total_unit_price = sum(price)) %>%
pull()
jpub_tbl %>%
summarise(total_unit_price = sum(price))
jpub_book_quantiy <- jpub_tbl %>%
summarise(total_books = sum(quantity)) %>%
pull()
jpub_book_total_unit_price <- jpub_tbl %>%
summarise(total_unit_price = sum(price)) %>%
pull()
jpub_book_total_unit_price * jpub_book_quantiy
jpub_book_quantiy
jpub_book_total_unit_price <- jpub_tbl %>%
summarise(total_unit_price = sum(price)) %>%
pull()
jpub_book_total_unit_price
jpub_book_quantiy
jpub_book_total_unit_price * jpub_book_quantiy
jpub_tbl %>%
mutate(amount = quantity * price)
summarise(total_amount = sum(quantity)) %>%
pull()
summarise(total_amount = sum(amount)) %>%
pull()
jpub_tbl %>%
mutate(amount = quantity * price) %>%
summarise(total_amount = sum(amount)) %>%
pull()
scales::comma(total_amount)
scales::comma(total_amount)
total_amount <- jpub_tbl %>%
mutate(amount = quantity * price) %>%
summarise(total_amount = sum(amount)) %>%
pull()
scales::comma(total_amount)
