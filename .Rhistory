library(reactable)
library(tidyverse)
library(readxl)
library(reactable)
jpub_raw <- read_excel("data/후원도서_한국 R 컨퍼런스.xlsx")
jpub_tbl <- jpub_raw %>%
set_names(c("address", "title", "publisher", "price", "quantity", "description"))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
})))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "KOR", separators = TRUE, locales = "ko-KR"))))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "U+20A9", separators = TRUE, locales = "ko-KR"))))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "U+20A9", separators = TRUE, locales = "ko-KR"))))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "₩", separators = TRUE, locales = "ko-KR"))))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR"))))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
quantity =  colDef(format = colFormat(minWidth = 100))
))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
quantity =  colDef(minWidth = 100))
))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
quantity =  colDef(minWidth = 100))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
quantity =  colDef(minWidth = 100),
price =  colDef(minWidth = 100))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
publisher =  colDef(minWidth = 100),
quantity =  colDef(minWidth = 100),
price =  colDef(minWidth = 100))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
publisher =  colDef(minWidth = 100),
quantity =  colDef(minWidth = 100),
description =  colDef(minWidth = 300))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
publisher =  colDef(minWidth = 50),
quantity =  colDef(minWidth = 50),
description =  colDef(minWidth = 300))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(minWidth = 70, format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
publisher =  colDef(minWidth = 70),
quantity =  colDef(minWidth = 70),
description =  colDef(minWidth = 300))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(minWidth = 80, format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
publisher =  colDef(minWidth = 80),
quantity =  colDef(minWidth = 80),
description =  colDef(minWidth = 300))
)
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(minWidth = 80, format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
publisher =  colDef(minWidth = 150),
publisher =  colDef(minWidth = 80),
quantity =  colDef(minWidth = 80),
description =  colDef(minWidth = 300))
)
jpub_fs <- fs::dir_ls("data/한국 R 컨퍼런스 후원도서 표지/")
jpub_fs
jpub_tbl
jpub_tbl %>%
mutate(image = jpub_fs)
jpub_tbl <- jpub_tbl %>%
mutate(image = jpub_fs)
img_src <- knitr::image_uri(sprintf("images/%s.png", value))
library(htmltools)
jpub_fs <- fs::dir_ls("data/한국 R 컨퍼런스 후원도서 표지/")
jpub_tbl <- jpub_tbl %>%
mutate(image = jpub_fs)
jpub_tbl %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(sprintf("images/%s.png", value))
image <- img(src = img_src, height = "24px", alt = "")
tagList(
div(style = list(display = "inline-block", width = "45px"), image),
value
)
})
))
img_src <- knitr::image_uri(value)
jpub_tbl %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "24px", alt = "")
tagList(
div(style = list(display = "inline-block", width = "45px"), image),
value
)
})
))
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "24px", alt = "")
tagList(
div(style = list(display = "inline-block", width = "45px"), image),
value
)
})
))
jpub_tbl %>%
select(image, everything())
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "24px", alt = "")
})
))
image <- img(src = img_src, height = "70px", alt = "")
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "70px", alt = "")
})
))
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "100px", alt = "")
})
))
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "100px", alt = "")
}),
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(minWidth = 80, format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
title =  colDef(minWidth = 150),
publisher =  colDef(minWidth = 80),
quantity =  colDef(minWidth = 80),
description =  colDef(minWidth = 300))
))
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "100px", alt = "")
}),
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(minWidth = 80, format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
title =  colDef(minWidth = 150),
publisher =  colDef(minWidth = 80),
quantity =  colDef(minWidth = 80),
description =  colDef(minWidth = 300)
))
jpub_tbl
jpub_tbl %>%
summarise(total_books = sum(quantity))
jpub_tbl %>%
summarise(total_books = sum(quantity)) %>%
pull()
jpub_book_quantiy <- jpub_tbl %>%
summarise(total_books = sum(quantity)) %>%
pull()
jpub_tbl %>%
summarise(total_unit_price = sum(price)) %>%
pull()
jpub_tbl %>%
summarise(total_unit_price = sum(price))
jpub_book_quantiy <- jpub_tbl %>%
summarise(total_books = sum(quantity)) %>%
pull()
jpub_book_total_unit_price <- jpub_tbl %>%
summarise(total_unit_price = sum(price)) %>%
pull()
jpub_book_total_unit_price * jpub_book_quantiy
jpub_book_quantiy
jpub_book_total_unit_price <- jpub_tbl %>%
summarise(total_unit_price = sum(price)) %>%
pull()
jpub_book_total_unit_price
jpub_book_quantiy
jpub_book_total_unit_price * jpub_book_quantiy
jpub_tbl %>%
mutate(amount = quantity * price)
summarise(total_amount = sum(quantity)) %>%
pull()
summarise(total_amount = sum(amount)) %>%
pull()
jpub_tbl %>%
mutate(amount = quantity * price) %>%
summarise(total_amount = sum(amount)) %>%
pull()
scales::comma(total_amount)
scales::comma(total_amount)
total_amount <- jpub_tbl %>%
mutate(amount = quantity * price) %>%
summarise(total_amount = sum(amount)) %>%
pull()
scales::comma(total_amount)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE,
comment="", digits = 3, tidy = FALSE, prompt = FALSE, fig.align = 'center')
# Chunk 2: jpub-book
library(tidyverse)
library(readxl)
library(reactable)
jpub_raw <- read_excel("data/후원도서_한국 R 컨퍼런스.xlsx")
jpub_tbl <- jpub_raw %>%
set_names(c("address", "title", "publisher", "price", "quantity", "description"))
jpub_tbl %>%
reactable(columns = list(
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(minWidth = 80, format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
title =  colDef(minWidth = 150),
publisher =  colDef(minWidth = 80),
quantity =  colDef(minWidth = 80),
description =  colDef(minWidth = 300))
)
total_amount <- jpub_tbl %>%
mutate(amount = quantity * price) %>%
summarise(total_amount = sum(amount)) %>%
pull()
# Chunk 3: jpub-table
library(htmltools)
jpub_fs <- fs::dir_ls("data/한국 R 컨퍼런스 후원도서 표지/")
jpub_tbl <- jpub_tbl %>%
mutate(image = jpub_fs)
jpub_tbl %>%
select(image, everything()) %>%
reactable(columns = list(
image = colDef(cell = function(value) {
img_src <- knitr::image_uri(value)
image <- img(src = img_src, height = "100px", alt = "")
}),
address = colDef(cell = function(value) {
htmltools::tags$a(href = value, target = "_blank", value)
}),
price =  colDef(minWidth = 80, format = colFormat(currency = "", separators = TRUE, locales = "ko-KR")),
title =  colDef(minWidth = 150),
publisher =  colDef(minWidth = 80),
quantity =  colDef(minWidth = 80),
description =  colDef(minWidth = 300)
))
# Chunk 4: jpub-img-slickr
library(slickR)
slickR(jpub_tbl$image, height = 600)
# Chunk 5: jpub-details
library(trelliscopejs)
book_1177 <- read_excel("data/후원도서_한국 R 컨퍼런스.xlsx", sheet = "1177", col_names = FALSE) %>%
pivot_wider(names_from = `...1`, values_from = `...2`)
book_1131 <- read_excel("data/후원도서_한국 R 컨퍼런스.xlsx", sheet = "1131", col_names = FALSE) %>%
pivot_wider(names_from = `...1`, values_from = `...2`)
book_930 <- read_excel("data/후원도서_한국 R 컨퍼런스.xlsx", sheet = "930", col_names = FALSE) %>%
pivot_wider(names_from = `...1`, values_from = `...2`)
book_903 <- read_excel("data/후원도서_한국 R 컨퍼런스.xlsx", sheet = "903", col_names = FALSE) %>%
pivot_wider(names_from = `...1`, values_from = `...2`)
book_901 <- read_excel("data/후원도서_한국 R 컨퍼런스.xlsx", sheet = "901", col_names = FALSE) %>%
pivot_wider(names_from = `...1`, values_from = `...2`)
book_748 <- read_excel("data/후원도서_한국 R 컨퍼런스.xlsx", sheet = "748", col_names = FALSE) %>%
pivot_wider(names_from = `...1`, values_from = `...2`)
book_raw <- bind_rows(book_1177, book_1131) %>%
bind_rows(book_930) %>%
bind_rows(book_903) %>%
bind_rows(book_901) %>%
bind_rows(book_748) %>%
mutate(도서명 = c("실전에서 바로 쓰는 시계열 데이터 처리와 분석 in R",
"R을 이용한 퀀트 투자 포트폴리오 만들기(개정판)",
"R로 배우는 텍스트 마이닝",
"앤디 필드의 유쾌한 R 통계학",
"케라스 창시자의 딥러닝 with R",
"R로 배우는 실무 데이터 과학"))
jpub_eng_fs <- fs::dir_ls("jpub_local/images/")
book_tbl <- book_raw %>%
mutate(저자명 = ifelse(is.na(저자명), 지은이, 저자명)) %>%
select(출판일, 페이지, 판형, 정가, 키워드, 도서명, 저자명) %>%
mutate(출판일 = lubridate::make_date(year  = str_extract(출판일, "^[0-9]{4}"),
month = str_extract(출판일, "(?<=년)(.*?)(?=월)"),
day   = str_extract(출판일, "(?<=월)(.*?)(?=일)"))) %>%
mutate(페이지 = parse_number(페이지),
정가   = parse_number(정가)) %>%
mutate(image = as.character(jpub_eng_fs) %>% str_remove(., pattern="jpub_local/")) %>%
mutate(panel = img_panel_local(image)) %>%
set_names(c("date", "page", "size", "price", "keyword", "name", "author", "panel", "image"))
trelliscope(book_tbl, name = "jpub",
nrow = 3, ncol = 5,
path="jpub_local")
trelliscope(book_tbl, name = "jpub",
nrow = 3, ncol = 5,
path="jpub_local/")
trelliscope(book_tbl, name = "jpub",
path="jpub_local")
book_tbl <- book_raw %>%
mutate(저자명 = ifelse(is.na(저자명), 지은이, 저자명)) %>%
select(출판일, 페이지, 판형, 정가, 키워드, 도서명, 저자명) %>%
mutate(출판일 = lubridate::make_date(year  = str_extract(출판일, "^[0-9]{4}"),
month = str_extract(출판일, "(?<=년)(.*?)(?=월)"),
day   = str_extract(출판일, "(?<=월)(.*?)(?=일)"))) %>%
mutate(페이지 = parse_number(페이지),
정가   = parse_number(정가)) %>%
mutate(image = as.character(jpub_eng_fs) %>% str_remove(., pattern="jpub_local/")) %>%
filter(str_detect(image, "jpg")) %>%
mutate(panel = img_panel_local(image)) %>%
set_names(c("date", "page", "size", "price", "keyword", "name", "author", "panel", "image"))
trelliscope(book_tbl, name = "jpub",
path="jpub_local")
book_tbl
View(book_tbl)
book_tbl <- book_raw %>%
mutate(저자명 = ifelse(is.na(저자명), 지은이, 저자명)) %>%
select(출판일, 페이지, 판형, 정가, 키워드, 도서명, 저자명) %>%
mutate(출판일 = lubridate::make_date(year  = str_extract(출판일, "^[0-9]{4}"),
month = str_extract(출판일, "(?<=년)(.*?)(?=월)"),
day   = str_extract(출판일, "(?<=월)(.*?)(?=일)"))) %>%
mutate(페이지 = parse_number(페이지),
정가   = parse_number(정가)) %>%
mutate(image = as.character(jpub_eng_fs) %>% str_remove(., pattern="jpub_local/")) %>%
filter(str_detect(image, "jpg")) %>%
mutate(panel = img_panel_local(image)) %>%
set_names(c("date", "page", "size", "price", "keyword", "name", "author", "panel", "image")) %>%
select(-image)
trelliscope(book_tbl, name = "jpub",
path="jpub_local")
book_tbl <- book_raw %>%
mutate(저자명 = ifelse(is.na(저자명), 지은이, 저자명)) %>%
select(출판일, 페이지, 판형, 정가, 키워드, 도서명, 저자명) %>%
mutate(출판일 = lubridate::make_date(year  = str_extract(출판일, "^[0-9]{4}"),
month = str_extract(출판일, "(?<=년)(.*?)(?=월)"),
day   = str_extract(출판일, "(?<=월)(.*?)(?=일)"))) %>%
mutate(페이지 = parse_number(페이지),
정가   = parse_number(정가)) %>%
mutate(image = as.character(jpub_eng_fs) %>% str_remove(., pattern="jpub_local/")) %>%
filter(str_detect(image, "jpg")) %>%
mutate(image = img_panel_local(image)) %>%
set_names(c("date", "page", "size", "price", "keyword", "name", "author", "image"))
trelliscope(book_tbl, name = "jpub",
path="jpub_local")
book_tbl <- book_raw %>%
mutate(저자명 = ifelse(is.na(저자명), 지은이, 저자명)) %>%
select(출판일, 페이지, 판형, 정가, 키워드, 도서명, 저자명) %>%
mutate(출판일 = lubridate::make_date(year  = str_extract(출판일, "^[0-9]{4}"),
month = str_extract(출판일, "(?<=년)(.*?)(?=월)"),
day   = str_extract(출판일, "(?<=월)(.*?)(?=일)"))) %>%
mutate(페이지 = parse_number(페이지),
정가   = parse_number(정가)) %>%
mutate(image = as.character(jpub_eng_fs) %>% str_remove(., pattern="jpub_local/")) %>%
filter(str_detect(image, "png")) %>%
mutate(image = img_panel_local(image)) %>%
set_names(c("date", "page", "size", "price", "keyword", "name", "author", "image"))
trelliscope(book_tbl, name = "jpub",
path="jpub_local")
View(book_tbl)
book_tbl$image
book_tbl <- book_raw %>%
mutate(저자명 = ifelse(is.na(저자명), 지은이, 저자명)) %>%
select(출판일, 페이지, 판형, 정가, 키워드, 도서명, 저자명) %>%
mutate(출판일 = lubridate::make_date(year  = str_extract(출판일, "^[0-9]{4}"),
month = str_extract(출판일, "(?<=년)(.*?)(?=월)"),
day   = str_extract(출판일, "(?<=월)(.*?)(?=일)"))) %>%
mutate(페이지 = parse_number(페이지),
정가   = parse_number(정가)) %>%
mutate(cover = as.character(jpub_eng_fs) %>% str_remove(., pattern="jpub_local/")) %>%
filter(str_detect(cover, "png")) %>%
mutate(image = img_panel_local(cover)) %>%
set_names(c("date", "page", "size", "price", "keyword", "name", "author", "image"))
book_raw %>%
mutate(저자명 = ifelse(is.na(저자명), 지은이, 저자명)) %>%
select(출판일, 페이지, 판형, 정가, 키워드, 도서명, 저자명) %>%
mutate(출판일 = lubridate::make_date(year  = str_extract(출판일, "^[0-9]{4}"),
month = str_extract(출판일, "(?<=년)(.*?)(?=월)"),
day   = str_extract(출판일, "(?<=월)(.*?)(?=일)"))) %>%
mutate(페이지 = parse_number(페이지),
정가   = parse_number(정가)) %>%
mutate(cover = as.character(jpub_eng_fs) %>% str_remove(., pattern="jpub_local/")) %>%
filter(str_detect(cover, "png")) %>%
mutate(image = img_panel_local(cover))
book_tbl <- book_raw %>%
mutate(저자명 = ifelse(is.na(저자명), 지은이, 저자명)) %>%
select(출판일, 페이지, 판형, 정가, 키워드, 도서명, 저자명) %>%
mutate(출판일 = lubridate::make_date(year  = str_extract(출판일, "^[0-9]{4}"),
month = str_extract(출판일, "(?<=년)(.*?)(?=월)"),
day   = str_extract(출판일, "(?<=월)(.*?)(?=일)"))) %>%
mutate(페이지 = parse_number(페이지),
정가   = parse_number(정가)) %>%
mutate(cover = as.character(jpub_eng_fs) %>% str_remove(., pattern="jpub_local/")) %>%
filter(str_detect(cover, "png")) %>%
mutate(image = img_panel_local(cover)) %>%
set_names(c("date", "page", "size", "price", "keyword", "name", "author", "cover", "image"))
trelliscope(book_tbl, name = "jpub",
path="jpub_local")
book_trelliscope_tbl <- book_raw %>%
mutate(저자명 = ifelse(is.na(저자명), 지은이, 저자명)) %>%
select(출판일, 페이지, 판형, 정가, 키워드, 도서명, 저자명) %>%
mutate(출판일 = lubridate::make_date(year  = str_extract(출판일, "^[0-9]{4}"),
month = str_extract(출판일, "(?<=년)(.*?)(?=월)"),
day   = str_extract(출판일, "(?<=월)(.*?)(?=일)"))) %>%
mutate(페이지 = parse_number(페이지),
정가   = parse_number(정가)) %>%
mutate(cover = as.character(jpub_eng_fs) %>% str_remove(., pattern="jpub_local/")) %>%
filter(str_detect(cover, "png")) %>%
mutate(image = img_panel_local(cover)) %>%
set_names(c("date", "page", "size", "price", "keyword", "name", "author", "cover", "image"))
trelliscope(book_trelliscope_tbl, name = "jpub",
path="jpub_local")
book_trelliscope_tbl <- book_raw %>%
mutate(저자명 = ifelse(is.na(저자명), 지은이, 저자명)) %>%
select(출판일, 페이지, 판형, 정가, 키워드, 도서명, 저자명) %>%
mutate(출판일 = lubridate::make_date(year  = str_extract(출판일, "^[0-9]{4}"),
month = str_extract(출판일, "(?<=년)(.*?)(?=월)"),
day   = str_extract(출판일, "(?<=월)(.*?)(?=일)"))) %>%
mutate(페이지 = parse_number(페이지),
정가   = parse_number(정가)) %>%
mutate(cover = as.character(jpub_eng_fs) %>% str_remove(., pattern="jpub_local/")) %>%
filter(str_detect(cover, "jpg")) %>%
mutate(image = img_panel_local(cover)) %>%
set_names(c("date", "page", "size", "price", "keyword", "name", "author", "cover", "image"))
trelliscope(book_trelliscope_tbl, name = "jpub",
path="jpub_local")
